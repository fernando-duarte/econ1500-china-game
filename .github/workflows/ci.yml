name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # Lint, format, and test JS (frontend)
      - name: Install frontend dependencies
        run: cd frontend && npm install
      - name: Lint frontend
        run: cd frontend && npx eslint src || true
      - name: Format check frontend
        run: cd frontend && npx prettier --check "src/**/*.{js,jsx,ts,tsx}"
      - name: Test frontend
        run: cd frontend && npm test -- --watchAll=false
      
      # Bundle size analysis
      - name: Analyze bundle size
        run: cd frontend && npm run build && npx bundlesize
      
      # Performance budgets
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli
      - name: Build frontend for Lighthouse
        run: cd frontend && npm run build
      - name: Run Lighthouse CI
        run: |
          lhci autorun --collect.url=http://localhost:3000 \
            --collect.staticDistDir=./frontend/build \
            --collect.settings.preset=desktop \
            --assert.preset=lighthouse:recommended \
            --assert.assertions.resource-summary:document:size=<=250KB \
            --assert.assertions.largest-contentful-paint=<=1500 \
            --assert.assertions.first-contentful-paint=<=1000
            
      # Lint, format, and test JS (backend)
      - name: Install backend dependencies
        run: cd backend && npm install
      - name: Lint backend
        run: cd backend && npx eslint . || true
      - name: Format check backend
        run: cd backend && npx prettier --check "**/*.{js,jsx,ts,tsx}"
      - name: Test backend
        run: cd backend && npm test -- --watchAll=false
      # Lint, format, and test Python (economic-model)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: |
          cd china-growth-game/economic-model
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pytest
      - name: Lint Python
        run: cd china-growth-game/economic-model && flake8 .
      - name: Format check Python
        run: cd china-growth-game/economic-model && black --check .
      - name: Test Python
        run: cd china-growth-game/economic-model && pytest
      # Existing Docker build steps
      - name: Build frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          tags: solow-frontend:ci
          load: true
      - name: Build backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          tags: solow-backend:ci
          load: true
      - name: Build model
        uses: docker/build-push-action@v5
        with:
          context: ./model
          tags: solow-model:ci
          load: true 